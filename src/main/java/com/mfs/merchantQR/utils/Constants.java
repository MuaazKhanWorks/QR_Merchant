package com.mfs.merchantQR.utils;

import com.mfs.merchantQR.dto.TokenData;

import java.nio.charset.StandardCharsets;
import java.util.HashMap;

public interface Constants {


    String LOG_INFO = "INFO";
    String callingMethodInfo = "Calling method:: ";
    String endingMethodInfo = "Ending method:: ";
    String securityVariable = "security";
    String payloadVariable = "payload";
    String indexNameVariable = "indexName";
    String indexName = "zconnect-backoffice-index";
    String kafkaDataVar = "Data---";
    String KAFKA_PID_VAR = "PID--";
    String kafkaPidVar = "PID";
    String RECORD_NOT_FOUND = "Record Not Found";
    String USER_ID_VAR = "userId";
    String serviceNameVar = "servicename";
    String RECORD_NOT_SAVED = "Record Not Saved";
    String dataAccessException = "Data Access Exception";
    String methodArgumentNotValidException = "Method Argument Not Valid Exception";
    String exception = "Exception";
    String socketTimeoutException = "Socket Timeout Exception";
    String jsonProcessingException = "Json Processing Exception";
    String nullPointerException = "Null Pointer Exception";
    String connectIOException = "Connect IO Exception";
    String IOException = "IO Exception";
    String arrayIndexOutOfBoundsException = "Array Index Out Of Bounds Exception";
    String sqlDataException = "SQL Data Exception";
    String jsonParseException = "Json Parse Exception";
    String classNotFoundException = "Class Not Found Exception";
    String numberFormatException = "Number Format Exception";
    String runtimeException = "Runtime Exception";
    String sqlException = "SQL Exception";
    String jsonException = "JSON Exception";
    String sqlRecoverableException = "SQL Recoverable Exception";
    String illegalArgumentException = "Illegal Argument Exception";
    String classCastException = "Class Cast Exception";
    String socketException = "Socket Exception";
    String logLevelExe = "EXE";
    String EMPTY = "";
    String exceptionEndPoint = "/Exception";
    String successCode = "0000";
    String endingMethod = "Ending Method :: ";
    String configuration = "zconnect_backoffice";
    String s1 = "*";
    String AUTHORIZATION = "Authorization";
    String accept = "accept";
    String applicationJson = "application/json";
    String validationFailed = "Validations Failed";
    String id = "Id is Required";
    String SUCCESS = "Success";
    String SET_YES = "Y";
    String error = "error";
    String secKey = "AIS_JSCASH";
    String jwtID = "ID";
    String jwtSubject = "Subject";
    String jwtIssuer = "Issuer";
    String jwtExpiration = "Expiration";
    String jwtExpired = "Expired";
    String jwtExpiredCheck = "Y";
    String contains = "JWT expired at";
    String charsetName = "UTF-8";
    String sha = "SHA-1";
    String algorithm = "AES";
    String userId = "userId";
    String loginId = "loginId";
    String userTypeId = "userTypeId";
    HashMap<String, String> mapUnhandleException = null;
    String paddingCBC = "AES/CBC/PKCS5PADDING";
    String unhandleException = null;
    String errorDecrytion = "Error occurred during decryption: ";
    String errorEncryption = "Error occurred during encryption: ";
    String aes_secret_key = "ais-567890123456789012345678-256";
    byte[] IV_PARAMETER = "1234567890123456".getBytes(StandardCharsets.UTF_8);
    String requestMapping = "/v1";
    String UNKNOWN_METHOD = "Unknown Method";
    String RECORD_NOT_UPDATED = "Record Not Update";
    String GET_LOV_DATA = "getlovdata/{key}";
    String TBL_ROLE = "tbl_role";
    String LOGIN = "/login";
    String equalsIgnoreCase = "N";
    String JWT_ID = "ZCONNECT";
    String JWT_ISSUER = "Zindigi";
    String MFS = "MFS";
    String RECORD_ALREADY_EXISTS = "Record Already Exists";
    String BEARER = "Bearer ";
    String TBL_USER = "tbl_user";
    String REQUEST_TYPE_SAVE = "I";
    String REQUEST_TYPE_UPDATE = "U";
    String MAKER_CHECKER_NOT_APPLICABLE_CODE = "112233445566";
    String APPLICABILITY = "APPLICABLE_YN";
    String STATUS_DESCR = "STATUS_DESCR";
    String STATUS = "STATUS";
    String REQUEST_STATUS = "REQUEST_STATUS";
    Object ACTION_TAKEN = "ACTION_TAKEN";
    String requestData = "data";
    String success = "Success";
    String recordNotSaved = "Record Not Saved";
    String invalidToken = "Invalid Token";
    String recordNotFound = "Record Not Found";
    String expired = "Expired";
    int seven = 7;
    String security = "security";
    String logsurl = "logsurl";
    String fieldValidationCode = "011001";
    String getIsActive = "Is Active is Required";
    String formName = "Account Types";
    String empty = "";
    TokenData TokenUnhandleException = null;
    String contentType = "content-type";
    String formNameKey = "formName";
    String makerIdKey = "makerId";
    String ftFlagKey = "ftFlag";
    String tableNameKey = "tableName";
    String requestTypeKey = "requestType";
    String refTableIdKey = "refTableId";
    String accountAlreadyExist = "Account Already Exist";
    String accountCreatedSucessfully = "Account Created Successfully";
    String logInfo = "INFO";
    String recordFound = "Record Found";
    String sessionExpired = "Session Expired";
    String Exception = "Exception";
    String JWTId = "ZBOX";
    String JWTissuer = "Zindigi";
    String updateTypeKey = "updateType";
    String workflowurlKey = "workflowurl";
    String moduleIdKey = "moduleId";
    String makerCommentsKey = "makerComments";
    String updateJsonKey = "updateJson";
    String mcRequestIdKey = "mcRequestId";
    String mcPeindingRequestIdKey = "mcPeindingRequestId";
    String checkerIdKey = "checkerId";
    String checkerCommentsKey = "checkerComments";
    String actionKey = "action";
    String updatedIndexKey = "updatedIndex";
    String mcApplicableEndPoint = "/v1/management/ckeckMcApplicable";
    String mcRequestEndPoint = "/v1/management/mcRequest";
    String mcActionEndPoint = "/v1/management/mcAction";
    String recordExist = "Record Already Exist";
    String getName = "Name is Required";
    String getUserById = "/getUserById/{userId}";
    String getUserUpdateCheckerById = "/getUserUpdateCheckerById/{mcRequestId}";
    String sha256 = "SHA-256";
    String recordNotFoundCode = "1300";
    String generalProcessingCode = "2000";
    String generalProcessingError = "General Processing Error";
    String SAVE_USER = "/createuser";
    String GET_ALL_USERS = "/getalluser";
    String GET_ALL_MERCHANT = "/getallmerchant";
    String GET_NAME = "Please Enter Name";
    String GET_PASSWORD="Please Enter Password";
    String GET_ROLE="Please Enter Role";
    String USER_ALREADY_EXIST="User Already Exist ";
    String QR_CODE="/qrcode/{merchantId}";
    String UPDATE_USER = "/updateuser";
    String CREATE_USER_FORM_NAME = "CREATE USER";
    String UPDATE_USER_FORM_NAME = "UPDATE USER";
    String GET_USERS="Please Enter Data";
    String UPDATE_DOWNLAOD_STATUS = "/updateDownloadStatus";
    String ACCOUNT_PARKED_FOR_APPROVAL = "You Are All Done. Our Team is Reviewing details. This can Take Upto 48 Hours";
    String LKP_STATUS = "lkp_status";
    String AndroidapiQRStaticQR="Android/api/QR/StaticQR";
}
